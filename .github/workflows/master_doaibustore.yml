# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - doaibustore

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Setup build environment
        env:
          # Core application environment variables
          DATABASE_URL: "sqlserver://localhost:1433;database=temp;user=temp;password=temp;encrypt=true;"
          JWT_SECRET: "fc171b44b0f64cd1122b7de3b42405f71cfda1f1e"
          NEXTAUTH_SECRET: "e1a26e8ae36bab0baaff5cad72633c103e345b65"
          NEXTAUTH_URL: "https://doaibustore.site"
          NODE_ENV: "production"
          
          # Azure service dummy keys for build (will not be used at runtime)
          AZURE_OPENAI_ENDPOINT: "https://dummy.openai.azure.com/"
          AZURE_OPENAI_API_KEY: "dummy-build-key"
          AZURE_OPENAI_DEPLOYMENT_NAME: "gpt-4"
          AZURE_DOCUMENT_INTELLIGENCE_ENDPOINT: "https://dummy.cognitiveservices.azure.com/"
          AZURE_DOCUMENT_INTELLIGENCE_API_KEY: "dummy-build-key"
          AZURE_SIGNALR_CONNECTION_STRING: "Endpoint=https://dummy.service.signalr.net;AccessKey=dummy-build-key;Version=1.0;"
          AZURE_STORAGE_ACCOUNT_NAME: "dummy"
          AZURE_STORAGE_ACCOUNT_KEY: "dummy-build-key"
          AZURE_STORAGE_CONNECTION_STRING: "DefaultEndpointsProtocol=https;AccountName=dummy;AccountKey=dummy-build-key;EndpointSuffix=core.windows.net"
          APPLICATIONINSIGHTS_CONNECTION_STRING: "InstrumentationKey=dummy-build-key"
          XDT_MicrosoftApplicationInsights_Mode: "default"
        run: |
          npm ci
          npm run build:azure
          
          # Verify build output
          ls -la .next || echo ".next folder not created"
          
          # Check if essential files exist
          echo "Build completed. Checking output:"
          ls -la
          echo "Checking .next folder contents:"
          ls -la .next/ || echo "No .next folder"

      - name: Prepare deployment package
        run: |
          # Remove node_modules to avoid size issues but preserve necessary files
          rm -rf node_modules
          
          # Install only production dependencies
          npm ci --only=production
          
          # Create deployment folder
          mkdir -p deploy
          
          # Copy essential files for deployment
          cp -r .next deploy/
          cp -r public deploy/
          cp -r src deploy/
          cp -r prisma deploy/
          cp package*.json deploy/
          cp next.config.js deploy/
          cp web.config deploy/
          
          # Copy node_modules (production only)
          cp -r node_modules deploy/
          
          # Create startup scripts
          echo "node server.js" > deploy/startup.sh
          echo "npm start" > deploy/package-start.sh
          
          cd deploy && zip -r ../release.zip . -x "*.env*" "*.log"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_98343B524EC149B09B2BAF053632C6F9 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_8A72675D09B4437A8B79B90A75DD6CC0 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_9901E9BE8782443796A7EE83CA8D5454 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'doaibustore'
          slot-name: 'Production'
          package: .
          